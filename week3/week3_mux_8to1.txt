module mux_8to1(Y);
reg [3:0] I0,I1,I2,I3,I4,I5,I6,I7;
reg [2:0] S;
output reg [3:0]Y;


always @(*) begin
        case(S)
                3'b000:Y=I0;
                3'b001:Y=I1;
                3'b010:Y=I2;
                3'b011:Y=I3;
                3'b100:Y=I4;
                3'b101:Y=I5;
                3'b110:Y=I6;
                3'b111:Y=I7;
        endcase
    end

initial begin
I0=4'b0110;
I1=4'b0001;
I2=4'b0011;
I3=4'b0101;
I4=4'b0100;
I5=4'b1110;
I6=4'b0110;
I7=4'b1111;

S=3'b000; #10;
S=3'b001; #10;
S=3'b010; #10;
S=3'b011; #10;
S=3'b100; #10;
S=3'b101; #10;
S=3'b110; #10;
S=3'b111; #10;
$finish;
end

endmodule